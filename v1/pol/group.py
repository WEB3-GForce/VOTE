from printable_object import PrintableObject

"""
File Generated by Lisp2Python Translator
"""

class Group(PrintableObject):

    """"
    A class that represents a particular group.
    """

    def __init__(self, **entries):

        """
        Constructs a new Group object.

        name              -- name of group
        notes             -- list of remarks
        gender            -- male or female
        issues            -- list of issues of importance to this group
        stances           -- list of stances
        credo             -- list of stances personal to this group
        english           -- English version of group name
        english_short     -- short English phrase for group
        pro_english       -- English phrase biased favorably
        con_english       -- pejorative English phrase
        french            -- French version of group name
        french_short      -- short French phrase for group
        pro_french        -- French phrase biased favorably
        con_french        -- pejorative French phrase
        number            -- sing or plur for generation
        synonyms          -- List of symbols
        pro_stances       -- List of stances supporting this group
        con_stances       -- List of stances opposing this group
        norm              -- Normative relation to this group
        instances         -- List of groups

        return            -- returns nothing
        """
        self.name = None
        self.notes = []
        self.gender = None
        self.issues = []
        self.stances = []
        self.credo = None
        self.english = None
        self.english_short = None
        self.pro_english = None
        self.con_english = None
        self.french = None
        self.french_short = None
        self.pro_french = None
        self.con_french = None
        self.number = None
        self.synonyms = []
        self.pro_stances = []
        self.con_stances = []
        self.norm = None
        self.instances = []
        self.__dict__.update(entries)

    # Only support named searches for now.
    def sort_key(self):
        return self.name
